package com.aws.ccproject.repo;

import java.util.ArrayList;
import java.util.List;
import java.util.Map;

import org.slf4j.Logger;
import org.slf4j.LoggerFactory;
import org.springframework.beans.factory.annotation.Autowired;
import org.springframework.stereotype.Repository;

import com.amazonaws.services.sqs.model.CreateQueueResult;
import com.amazonaws.services.sqs.model.DeleteMessageRequest;
import com.amazonaws.services.sqs.model.GetQueueAttributesRequest;
import com.amazonaws.services.sqs.model.Message;
import com.amazonaws.services.sqs.model.QueueDoesNotExistException;
import com.amazonaws.services.sqs.model.ReceiveMessageRequest;
import com.amazonaws.services.sqs.model.ReceiveMessageResult;
import com.amazonaws.services.sqs.model.SendMessageRequest;
import com.aws.ccproject.config.AwsConfiguration;

@Repository
public class SqsRepoImpl implements SqsRepo {

	private static final Logger LOGGER = LoggerFactory.getLogger(SqsRepoImpl.class);

	@Autowired
	private AwsConfiguration awsConfiguration;

	@Override
	public void deleteMessage(Message message, String queueName) {
//		log.info("Deleting message from the queue.");
		String queueUrl = awsConfiguration.awsSQS().getQueueUrl(queueName).getQueueUrl();
		String messageReceiptHandle = message.getReceiptHandle();
		DeleteMessageRequest deleteMessageRequest = new DeleteMessageRequest(queueUrl, messageReceiptHandle);
		awsConfiguration.awsSQS().deleteMessage(deleteMessageRequest);
	}

	@Override
	public CreateQueueResult createQueue(String queueName) {
//		log.info("Creating the queue.");
		CreateQueueResult createQueueResult = awsConfiguration.awsSQS().createQueue(queueName);
		return createQueueResult;
	}

	@Override
	public Message receiveMessage(String queueName, Integer waitTime, Integer visibilityTimeout) {
//		log.info("Receiving the message from the queue.");
		String queueUrl = null;
		try {
			queueUrl = awsConfiguration.awsSQS().getQueueUrl(queueName).getQueueUrl();
		} catch (QueueDoesNotExistException queueDoesNotExistException) {
//			log.info("SQS queue is not present in list and is creating now with name: " + queueName);
			CreateQueueResult createQueueResult = this.createQueue(queueName);
			queueUrl = awsConfiguration.awsSQS().getQueueUrl(queueName).getQueueUrl();
		}
		ReceiveMessageRequest receiveMessageRequest = new ReceiveMessageRequest(queueUrl);
		receiveMessageRequest.setMaxNumberOfMessages(1);
		receiveMessageRequest.setWaitTimeSeconds(waitTime);
		receiveMessageRequest.setVisibilityTimeout(visibilityTimeout);
		ReceiveMessageResult receiveMessageResult = awsConfiguration.awsSQS().receiveMessage(receiveMessageRequest);
		List<Message> messageList = receiveMessageResult.getMessages();
		if (messageList.isEmpty()) {
			return null;
		}
		return messageList.get(0);
	}

	@Override
	public void sendMessage(String messageBody, String queueName, Integer delaySeconds) {
//		log.info("Sending the message into the queue:" + messageBody);
		//Sending the message into the queue:https://hemanth546s3input.s3.amazonaws.com/test_0.JPEG-images
		String queueUrl = null;
		try {
			queueUrl = awsConfiguration.awsSQS().getQueueUrl(queueName).getQueueUrl();
		} catch (QueueDoesNotExistException queueDoesNotExistException) {
//			log.info("SQS queue is not present in list and is creating now with name: " + queueName);
			CreateQueueResult createQueueResult = this.createQueue(queueName);
			queueUrl = awsConfiguration.awsSQS().getQueueUrl(queueName).getQueueUrl();
		}
		SendMessageRequest sendMessageRequest = new SendMessageRequest().withQueueUrl(queueUrl)
				.withMessageBody(messageBody).withDelaySeconds(delaySeconds);
		awsConfiguration.awsSQS().sendMessage(sendMessageRequest);

	}

	@Override
	public Integer getApproximateNumberOfMsgs(String queueName) {
//		log.info("Getting approximate number of messages.");
		String queueUrl = null;
		try {
			queueUrl = awsConfiguration.awsSQS().getQueueUrl(queueName).getQueueUrl();
		} catch (QueueDoesNotExistException queueDoesNotExistException) {
//			log.info("SQS queue is not present in list and is creating now with name: " + queueName);
			CreateQueueResult createQueueResult = this.createQueue(queueName);
			queueUrl = awsConfiguration.awsSQS().getQueueUrl(queueName).getQueueUrl();
		}
		List<String> attributeNames = new ArrayList<String>();
		attributeNames.add("ApproximateNumberOfMessages");
		GetQueueAttributesRequest getQueueAttributesRequest = new GetQueueAttributesRequest(queueUrl, attributeNames);
		Map map = awsConfiguration.awsSQS().getQueueAttributes(getQueueAttributesRequest).getAttributes();
		String numberOfMessagesString = (String) map.get("ApproximateNumberOfMessages");
		Integer numberOfMessages = Integer.valueOf(numberOfMessagesString);
		return numberOfMessages;
	}

}
